import Token0Name from Token0Addr
import Token1Name from Token1Addr
import FlowToken from "../../contracts/tokens/FlowToken.cdc"
import SwapFactory from "../../contracts/SwapFactory.cdc"

/// deploy code copied by a deployed contract
transaction() {
    prepare(userAccount: AuthAccount) {
        let flowVaultRef = userAccount.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault)!
        assert(flowVaultRef.balance >= 0.002, message: "Insufficient balance to create pair, minimum balance requirement: 0.002 flow")
        let accountCreationFeeVault <- flowVaultRef.withdraw(amount: 0.001)
    
        let token0Vault <- Token0Name.createEmptyVault()
        let token1Vault <- Token1Name.createEmptyVault()
        SwapFactory.createPair(token0Vault: <-token0Vault, token1Vault: <-token1Vault, accountCreationFee: <-accountCreationFeeVault)
    }
}